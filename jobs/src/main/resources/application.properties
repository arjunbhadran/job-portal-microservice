spring.application.name=jobs

server.port=8082

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Eureka
eureka.client.service-url.default=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#config server
spring.config.import=optional:configserver:http://localhost:8080
spring.profiles.active=dev

#actuator
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#circuit breaker
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.companyBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.companyBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.companyBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

resilience4j.retry.instances.companyBreaker.max-attempts=5
resilience4j.retry.instances.companyBreaker.wait-duration=2s

#in the above, company breaker is the circuit breaker instance we are creating here.
# failure rate threshold says that if the failure rate is more than 50%, circuit breaker transitions to open state.

#rate limiter
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration=0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

# in the above code, rate limiter will allow 2 calls every 4 seconds for us
# timeout duration is set if more calls are made then they will be made to wait for the timeout duration


#Actuator configuration
management.health.circuitbreakers.enabled=true
